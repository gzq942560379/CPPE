TranslationUnitDecl 0x66b19c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x66b2260 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x66b1f60 '__int128'
|-TypedefDecl 0x66b22d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x66b1f80 'unsigned __int128'
|-TypedefDecl 0x66b25d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x66b23b0 'struct __NSConstantString_tag'
|   `-Record 0x66b2328 '__NSConstantString_tag'
|-TypedefDecl 0x66b2670 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x66b2630 'char *'
|   `-BuiltinType 0x66b1a60 'char'
|-TypedefDecl 0x66b2968 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x66b2910 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x66b2750 'struct __va_list_tag'
|     `-Record 0x66b26c8 '__va_list_tag'
|-FunctionDecl 0x670f500 <./test/test07.c:1:1, col:16> col:12 GET 'int ()' extern
|-FunctionDecl 0x670f6d0 <line:2:1, col:25> col:15 MALLOC 'void *(int)' extern
| `-ParmVarDecl 0x670f600 <col:22> col:25 'int'
|-FunctionDecl 0x670f858 <line:3:1, col:24> col:13 FREE 'void (void *)' extern
| `-ParmVarDecl 0x670f790 <col:18, col:23> col:24 'void *'
|-FunctionDecl 0x670f9d8 <line:4:1, col:22> col:13 used PRINT 'void (int)' extern
| `-ParmVarDecl 0x670f918 <col:19> col:22 'int'
`-FunctionDecl 0x670faa8 <line:6:1, line:12:1> line:6:5 main 'int ()'
  `-CompoundStmt 0x670fe90 <col:12, line:12:1>
    |-DeclStmt 0x670fbe8 <line:7:4, col:13>
    | `-VarDecl 0x670fb60 <col:4, col:12> col:8 used a 'int' cinit
    |   `-IntegerLiteral 0x670fbc8 <col:12> 'int' 0
    |-ForStmt 0x670fd98 <line:9:4, col:35>
    | |-BinaryOperator 0x670fc40 <col:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x670fc00 <col:9> 'int' lvalue Var 0x670fb60 'a' 'int'
    | | `-IntegerLiteral 0x670fc20 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x670fcb8 <col:16, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x670fca0 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x670fc60 <col:16> 'int' lvalue Var 0x670fb60 'a' 'int'
    | | `-IntegerLiteral 0x670fc80 <col:20> 'int' 10
    | |-BinaryOperator 0x670fd70 <col:24, col:32> 'int' '='
    | | |-DeclRefExpr 0x670fcd8 <col:24> 'int' lvalue Var 0x670fb60 'a' 'int'
    | | `-BinaryOperator 0x670fd50 <col:28, col:32> 'int' '+'
    | |   |-ImplicitCastExpr 0x670fd38 <col:28> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x670fcf8 <col:28> 'int' lvalue Var 0x670fb60 'a' 'int'
    | |   `-IntegerLiteral 0x670fd18 <col:32> 'int' 1
    | `-NullStmt 0x670fd90 <col:35>
    `-CallExpr 0x670fe50 <line:11:4, col:11> 'void'
      |-ImplicitCastExpr 0x670fe38 <col:4> 'void (*)(int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x670fdd0 <col:4> 'void (int)' Function 0x670f9d8 'PRINT' 'void (int)'
      `-ImplicitCastExpr 0x670fe78 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x670fdf0 <col:10> 'int' lvalue Var 0x670fb60 'a' 'int'
